#-----------------------------------------------------------------------------#
# FleCSI CI Configuration for ClearLinux
#------------------------------------------------------------------------------#

FROM clearlinux:latest

#------------------------------------------------------------------------------#
# Image arguments.
#------------------------------------------------------------------------------#

ARG IMAGE_REPO
ARG IMAGE_BRANCH
ARG SPACK_REPO
ARG SPACK_BRANCH

#------------------------------------------------------------------------------#
# Install basic linux requirements
#------------------------------------------------------------------------------#

RUN swupd bundle-add \
  c-basic \
  ccache \
  curl \
  devpkg-graphviz \
  doxygen \
  emacs \
  file \
  flex \
  git \
  less \
  llvm \
  make \
  man-pages \
  os-core-search \
  patch \
  python3-basic \
  rsync \
  sysadmin-basic \
  vim \
  wget \
  which

#------------------------------------------------------------------------------#
# Build gcc 9
#------------------------------------------------------------------------------#

ADD gnu-clearlinux.xz /

#RUN wget http://ftpmirror.gnu.org/gcc/gcc-9.3.0/gcc-9.3.0.tar.xz
#RUN tar xf gcc-9.3.0.tar.xz
#
#WORKDIR gcc-9.3.0
#RUN contrib/download_prerequisites
#RUN ./configure --disable-multilib --enable-languages=c,c++,fortran \
#  --prefix=/opt/gnu/9.3.0
#RUN make
#RUN make install

#WORKDIR /
#RUN rm -rf gcc-9.3.0*

#------------------------------------------------------------------------------#
# Set root prompt
#------------------------------------------------------------------------------#

RUN echo "PS1=\"\[\033[1;31m\]root \[\e[38;5;160m\]>\[\e[38;5;166m\]>\[\e[38;5;172m\]>\[\033[0m\] \"" >> /root/.bashrc

#------------------------------------------------------------------------------#
# Add flecsi user
#------------------------------------------------------------------------------#

RUN groupadd -r flecsi
RUN useradd -r -m -g flecsi flecsi
RUN mkdir /etc/sudoers.d
RUN echo "flecsi ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/flecsi

USER flecsi
WORKDIR /home/flecsi

ADD --chown=flecsi:flecsi bashrc ./.bashrc
ADD --chown=flecsi:flecsi dircolors ./.dircolors
ADD --chown=flecsi:flecsi vimrc ./.vimrc

#------------------------------------------------------------------------------#
# Setup path for gcc 9
#------------------------------------------------------------------------------#

ENV PATH /opt/gnu/9.3.0/bin:$PATH
ENV LD_LIBRARY_PATH /opt/gnu/9.3.0/lib:/opt/gnu/9.3.0/lib64:$LD_LIBRARY_PATH

#------------------------------------------------------------------------------#
# Capture version information
#------------------------------------------------------------------------------#

RUN gcc -v 2>&1 | grep version | awk '{ print $3 }' > .gnu_version
RUN dot -V 2>&1 | awk '{print $5}' > .graphviz_version

#------------------------------------------------------------------------------#
# Install pip packages
#------------------------------------------------------------------------------#

RUN pip3 install --user pyyaml
RUN pip3 install --user Sphinx
RUN pip3 install --user recommonmark
RUN pip3 install --user sphinx_rtd_theme

#------------------------------------------------------------------------------#
# This clones the flecsi CI branch as specified during cmake configuration.
# It is used to set preferred versions and compiler configuration.
#------------------------------------------------------------------------------#

ARG EMPH="\e[38;5;36m"
ARG NEMPH="\e[0m"

RUN echo -e "${EMPH}Cloning images: ${IMAGE_BRANCH} from ${IMAGE_REPO}${NEMPH}"
RUN git clone --single-branch --branch ${IMAGE_BRANCH} ${IMAGE_REPO} .images

#------------------------------------------------------------------------------#
# Clone spack and create copy for the upstream install.
#------------------------------------------------------------------------------#

RUN echo -e "${EMPH}Cloning spack: ${SPACK_BRANCH} from ${SPACK_REPO}${NEMPH}"
RUN git clone --single-branch --branch ${SPACK_BRANCH} ${SPACK_REPO} .spack
RUN cp -r .spack .spack-upstream

#------------------------------------------------------------------------------#
# Set default shell for interactive
#------------------------------------------------------------------------------#

CMD /bin/bash

# vim: syntax=dockerfile
