#------------------------------------------------------------------------------#
# FleCSI CI Configuration for Environment
#------------------------------------------------------------------------------#

ARG OS
FROM ${OS}

#------------------------------------------------------------------------------#
# The branch for this operation should be one of the primary flecsi
# branches, e.g., 1.4, 2.0, or devel. The 'spack-repo' subdirectory of the
# cloned branch will be used to install upstream packages, which can be
# overriden if desired in the CI, but which will not have to be built
# during the CI run if they are not overriden by the user's merge request.
#------------------------------------------------------------------------------#

ARG IMAGE_REPO
ARG IMAGE_BRANCH
ARG SOURCE_REPO
ARG SOURCE_BRANCH

RUN git clone --single-branch --branch ${SOURCE_BRANCH} ${SOURCE_REPO} .flecsi

#------------------------------------------------------------------------------#
# This clones the flecsi CI branch as specified during cmake configuration.
# It is used to set preferred versions and compiler configuration.
#------------------------------------------------------------------------------#

RUN git clone --single-branch --branch ${IMAGE_BRANCH} ${IMAGE_REPO} .images

#------------------------------------------------------------------------------#
# Clone spack and create copy for the upstream install.
#------------------------------------------------------------------------------#

RUN git clone --single-branch \
  --branch develop https://github.com/spack/spack.git .spack
RUN cp -r .spack .spack-upstream

#------------------------------------------------------------------------------#
# Setup spack configuration.
#------------------------------------------------------------------------------#

ARG SUBDIR
ADD clang_fortran.py ./.clang_fortran.py

RUN export GNU_VERSION=`cat .gnu_version` && \
  export NCURSES_VERSION=`cat .ncurses_version` && \
  cat .images/${SUBDIR}/spack/packages.yaml | \
    sed "s,GNU_VERSION,${GNU_VERSION},g" | \
    sed "s,NCURSES_VERSION,${NCURSES_VERSION},g" > \
    .spack-upstream/etc/spack/packages.yaml

RUN . .spack-upstream/share/spack/setup-env.sh && \
  spack compiler find && \
  spack repo add .flecsi/spack-repo

RUN export GNU_VERSION=`cat .gnu_version` && \
  /home/flecsi/.clang_fortran.py '.spack/linux/compilers.yaml' \
    '.spack-upstream/etc/spack/compilers.yaml' "${GNU_VERSION}"

RUN export GNU_VERSION=`cat .gnu_version` && \
  /home/flecsi/.clang_fortran.py '.spack/linux/compilers.yaml' \
    '.spack/etc/spack/compilers.yaml' "${GNU_VERSION}"
RUN rm -rf ~/.spack/linux/compilers.yaml

RUN export GNU_VERSION=`cat .gnu_version` && \
  export NCURSES_VERSION=`cat .ncurses_version` && \
  cat .images/${SUBDIR}/spack/packages.yaml | \
    sed "s,GNU_VERSION,${GNU_VERSION},g" | \
    sed "s,NCURSES_VERSION,${NCURSES_VERSION},g" > \
    .spack/etc/spack/packages.yaml

RUN cp .images/${SUBDIR}/spack/upstreams.yaml .spack/etc/spack

#------------------------------------------------------------------------------#
# Build flecsi dependencies with mpich provider.
#------------------------------------------------------------------------------#

RUN \
  . .spack-upstream/share/spack/setup-env.sh \
  && \
  spack fetch --dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos  \
    +debug_backend \
    ^mpich \
  && \
  spack install --only dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    build_type=Debug \
    +debug_backend \
    ^mpich

RUN \
  . .spack-upstream/share/spack/setup-env.sh \
  && \
  spack fetch --dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    ^mpich \
  && \
  spack install --only dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    build_type=Release \
    ^mpich

#------------------------------------------------------------------------------#
# Build flecsi dependencies with openmpi provider.
#------------------------------------------------------------------------------#

RUN \
  . .spack-upstream/share/spack/setup-env.sh \
  && \
  spack fetch --dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    +debug_backend \
    ^openmpi \
  && \
  spack install --only dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    build_type=Release \
    +debug_backend \
    ^openmpi

RUN \
  . .spack-upstream/share/spack/setup-env.sh \
  && \
  spack fetch --dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    ^openmpi \
  && \
  spack install --only dependencies flecsi@devel backend=legion \
    +hdf5 \
    +kokkos \
    build_type=Release \
    ^openmpi

#------------------------------------------------------------------------------#
# Create format environment.
#------------------------------------------------------------------------------#

RUN . .spack-upstream/share/spack/setup-env.sh && \
  spack env create format && \
  spack env activate format && \
  spack install cmake

#------------------------------------------------------------------------------#
# Remove the lanl_ristra_flecsi repository so that the MR can override
# our defaults.
#------------------------------------------------------------------------------#

RUN . .spack/share/spack/setup-env.sh && \
  spack repo remove lanl_ristra_flecsi

#------------------------------------------------------------------------------#
# Set default shell for interactive.
#------------------------------------------------------------------------------#

ADD --chown=flecsi:flecsi bashrc ./.bashrc
ADD --chown=flecsi:flecsi dircolors ./.dircolors
ADD --chown=flecsi:flecsi vimrc ./.vimrc

CMD /bin/bash

# vim: syntax=dockerfile
